version: '3.8'

services:
  reader_postgres:
    image: crpi-wh1i56a4x558rrhm.cn-hangzhou.personal.cr.aliyuncs.com/changqinga/postgres:16-alpine
    container_name: reader_postgres
    environment:
      POSTGRES_DB: reader_qaq
      POSTGRES_USER: reader
      POSTGRES_PASSWORD: reader_dev_password
      TZ: UTC
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U reader"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - reader_network

  reader_redis:
    image: crpi-wh1i56a4x558rrhm.cn-hangzhou.personal.cr.aliyuncs.com/changqinga/valkey:8
    container_name: reader_redis
    ports:
      - "6380:6379"
    command: redis-server --appendonly yes --requirepass reader_dev_password
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - reader_network

  reader_minio:
    image: crpi-wh1i56a4x558rrhm.cn-hangzhou.personal.cr.aliyuncs.com/changqinga/minio:RELEASE.2023-12-20T01-00-02Z
    container_name: reader_minio
    environment:
      MINIO_ROOT_USER: reader
      MINIO_ROOT_PASSWORD: reader_dev_password
    ports:
      - "8999:9000"
      - "9002:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - reader_network

  reader_nginx:
    image: harbor.image-derivative.com:2443/sany/nginx:latest
    container_name: reader_nginx
    ports:
      - "3005:80"  # 生产环境使用，前端不用 npm run dev
    volumes:
      # Nginx 配置文件
      - ../nginx/nginx-docker.conf:/etc/nginx/conf.d/default.conf:ro
      # 前端构建产物（在项目根目录的 dist）
      - ../dist:/usr/share/nginx/html:ro
    depends_on:
      - reader_minio
    extra_hosts:
      # 允许 Nginx 访问宿主机上的后端服务
      - "host.docker.internal:host-gateway"
    networks:
      - reader_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  reader_network:
    driver: bridge

