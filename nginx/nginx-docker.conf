# Reader QAQ Nginx 配置（Docker 版本）
# 用于 Docker Compose 环境

server {
    listen 80;
    server_name _;
    
    # 增加客户端请求体大小限制（用于文件上传）
    client_max_body_size 100M;
    
    # 日志配置
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # ============================================
    # 后端 API 代理（代理到宿主机）
    # ============================================
    location /api/ {
        # 宿主机上的后端服务
        proxy_pass http://host.docker.internal:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 增加超时时间（用于长时间处理）
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;
    }
    
    # ============================================
    # MinIO 代理（用于文件访问）
    # ============================================
    location /minio/ {
        # 移除 /minio 前缀，转发到 MinIO
        rewrite ^/minio/(.*)$ /$1 break;
        
        # Docker 内部服务名
        proxy_pass http://reader_minio:9000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # MinIO 特定配置
        proxy_buffering off;
        proxy_request_buffering off;
        
        # 增加超时时间（大文件下载）
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;
    }
    
    # ============================================
    # 前端静态文件
    # ============================================
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        
        # 缓存策略
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # HTML 文件不缓存
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }
    }
    
    # 健康检查
    location /health {
        access_log off;
        return 200 "OK";
        add_header Content-Type text/plain;
    }
}

